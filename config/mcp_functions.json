{
  "mcp_configuration": {
    "version": "1.0.0",
    "description": "Comprehensive MCP Functions and Tools Registry",
    "auto_discovery": true,
    "auto_integration": true,
    "security_level": "enterprise"
  },
  "function_categories": {
    "file_management": {
      "description": "Complete file system operations",
      "functions": [
        {
          "name": "create_file",
          "description": "Create a new file with content",
          "parameters": {
            "file_path": {"type": "string", "description": "Path to the file"},
            "content": {"type": "string", "description": "File content"},
            "encoding": {"type": "string", "default": "utf-8"}
          },
          "returns": {"type": "object", "properties": {"success": "boolean", "message": "string"}}
        },
        {
          "name": "read_file",
          "description": "Read file content",
          "parameters": {
            "file_path": {"type": "string", "description": "Path to the file"},
            "encoding": {"type": "string", "default": "utf-8"}
          },
          "returns": {"type": "string", "description": "File content"}
        },
        {
          "name": "write_file",
          "description": "Write content to file",
          "parameters": {
            "file_path": {"type": "string", "description": "Path to the file"},
            "content": {"type": "string", "description": "Content to write"},
            "mode": {"type": "string", "default": "w", "enum": ["w", "a"]}
          },
          "returns": {"type": "boolean", "description": "Success status"}
        },
        {
          "name": "delete_file",
          "description": "Delete a file",
          "parameters": {
            "file_path": {"type": "string", "description": "Path to the file"}
          },
          "returns": {"type": "boolean", "description": "Success status"}
        },
        {
          "name": "move_file",
          "description": "Move or rename a file",
          "parameters": {
            "source_path": {"type": "string", "description": "Source file path"},
            "destination_path": {"type": "string", "description": "Destination file path"}
          },
          "returns": {"type": "boolean", "description": "Success status"}
        },
        {
          "name": "copy_file",
          "description": "Copy a file",
          "parameters": {
            "source_path": {"type": "string", "description": "Source file path"},
            "destination_path": {"type": "string", "description": "Destination file path"}
          },
          "returns": {"type": "boolean", "description": "Success status"}
        },
        {
          "name": "list_directory",
          "description": "List directory contents",
          "parameters": {
            "directory_path": {"type": "string", "description": "Directory path"},
            "recursive": {"type": "boolean", "default": false}
          },
          "returns": {"type": "array", "items": {"type": "string"}}
        },
        {
          "name": "create_directory",
          "description": "Create a directory",
          "parameters": {
            "directory_path": {"type": "string", "description": "Directory path"},
            "parents": {"type": "boolean", "default": true}
          },
          "returns": {"type": "boolean", "description": "Success status"}
        },
        {
          "name": "get_file_info",
          "description": "Get file metadata",
          "parameters": {
            "file_path": {"type": "string", "description": "File path"}
          },
          "returns": {"type": "object", "properties": {"size": "number", "modified": "string", "permissions": "string"}}
        }
      ]
    },
    "code_execution": {
      "description": "Code interpretation and execution",
      "functions": [
        {
          "name": "execute_python",
          "description": "Execute Python code",
          "parameters": {
            "code": {"type": "string", "description": "Python code to execute"},
            "timeout": {"type": "number", "default": 30},
            "capture_output": {"type": "boolean", "default": true}
          },
          "returns": {"type": "object", "properties": {"stdout": "string", "stderr": "string", "exit_code": "number"}}
        },
        {
          "name": "execute_shell",
          "description": "Execute shell commands",
          "parameters": {
            "command": {"type": "string", "description": "Shell command"},
            "working_directory": {"type": "string", "default": "/"},
            "timeout": {"type": "number", "default": 30}
          },
          "returns": {"type": "object", "properties": {"stdout": "string", "stderr": "string", "exit_code": "number"}}
        },
        {
          "name": "execute_javascript",
          "description": "Execute JavaScript code",
          "parameters": {
            "code": {"type": "string", "description": "JavaScript code"},
            "timeout": {"type": "number", "default": 30}
          },
          "returns": {"type": "object", "properties": {"result": "any", "error": "string"}}
        },
        {
          "name": "compile_code",
          "description": "Compile code in various languages",
          "parameters": {
            "code": {"type": "string", "description": "Source code"},
            "language": {"type": "string", "enum": ["c", "cpp", "java", "go", "rust"]},
            "output_file": {"type": "string", "description": "Output executable name"}
          },
          "returns": {"type": "object", "properties": {"success": "boolean", "output": "string", "errors": "string"}}
        },
        {
          "name": "run_jupyter_cell",
          "description": "Execute Jupyter notebook cell",
          "parameters": {
            "cell_code": {"type": "string", "description": "Cell code"},
            "kernel": {"type": "string", "default": "python3"}
          },
          "returns": {"type": "object", "properties": {"output": "string", "display_data": "array"}}
        }
      ]
    },
    "web_operations": {
      "description": "Web search and automation",
      "functions": [
        {
          "name": "web_search",
          "description": "Search the web",
          "parameters": {
            "query": {"type": "string", "description": "Search query"},
            "search_engine": {"type": "string", "default": "google", "enum": ["google", "bing", "duckduckgo"]},
            "num_results": {"type": "number", "default": 10}
          },
          "returns": {"type": "array", "items": {"type": "object", "properties": {"title": "string", "url": "string", "snippet": "string"}}}
        },
        {
          "name": "fetch_webpage",
          "description": "Fetch and parse webpage content",
          "parameters": {
            "url": {"type": "string", "description": "URL to fetch"},
            "parse_html": {"type": "boolean", "default": true},
            "extract_text": {"type": "boolean", "default": true}
          },
          "returns": {"type": "object", "properties": {"content": "string", "title": "string", "links": "array"}}
        },
        {
          "name": "download_file",
          "description": "Download file from URL",
          "parameters": {
            "url": {"type": "string", "description": "File URL"},
            "destination": {"type": "string", "description": "Local save path"},
            "chunk_size": {"type": "number", "default": 8192}
          },
          "returns": {"type": "object", "properties": {"success": "boolean", "file_size": "number"}}
        },
        {
          "name": "web_automation",
          "description": "Automate web browser actions",
          "parameters": {
            "url": {"type": "string", "description": "Target URL"},
            "actions": {"type": "array", "items": {"type": "object"}},
            "headless": {"type": "boolean", "default": true}
          },
          "returns": {"type": "object", "properties": {"success": "boolean", "screenshots": "array", "data": "object"}}
        },
        {
          "name": "extract_data",
          "description": "Extract structured data from web pages",
          "parameters": {
            "url": {"type": "string", "description": "Target URL"},
            "selectors": {"type": "object", "description": "CSS selectors for data extraction"},
            "format": {"type": "string", "default": "json", "enum": ["json", "csv", "xml"]}
          },
          "returns": {"type": "object", "description": "Extracted data"}
        }
      ]
    },
    "system_control": {
      "description": "System and desktop control",
      "functions": [
        {
          "name": "run_application",
          "description": "Launch an application",
          "parameters": {
            "application": {"type": "string", "description": "Application name or path"},
            "arguments": {"type": "array", "items": {"type": "string"}},
            "wait_for_exit": {"type": "boolean", "default": false}
          },
          "returns": {"type": "object", "properties": {"pid": "number", "success": "boolean"}}
        },
        {
          "name": "kill_process",
          "description": "Terminate a process",
          "parameters": {
            "pid": {"type": "number", "description": "Process ID"},
            "force": {"type": "boolean", "default": false}
          },
          "returns": {"type": "boolean", "description": "Success status"}
        },
        {
          "name": "list_processes",
          "description": "List running processes",
          "parameters": {
            "filter_name": {"type": "string", "description": "Filter by process name"}
          },
          "returns": {"type": "array", "items": {"type": "object", "properties": {"pid": "number", "name": "string", "cpu": "number", "memory": "number"}}}
        },
        {
          "name": "take_screenshot",
          "description": "Capture screen screenshot",
          "parameters": {
            "region": {"type": "object", "properties": {"x": "number", "y": "number", "width": "number", "height": "number"}},
            "save_path": {"type": "string", "description": "Path to save screenshot"}
          },
          "returns": {"type": "string", "description": "Screenshot file path"}
        },
        {
          "name": "click_at",
          "description": "Click at screen coordinates",
          "parameters": {
            "x": {"type": "number", "description": "X coordinate"},
            "y": {"type": "number", "description": "Y coordinate"},
            "button": {"type": "string", "default": "left", "enum": ["left", "right", "middle"]}
          },
          "returns": {"type": "boolean", "description": "Success status"}
        },
        {
          "name": "type_text",
          "description": "Type text at current cursor position",
          "parameters": {
            "text": {"type": "string", "description": "Text to type"},
            "delay": {"type": "number", "default": 0.05}
          },
          "returns": {"type": "boolean", "description": "Success status"}
        },
        {
          "name": "send_key",
          "description": "Send keyboard key press",
          "parameters": {
            "key": {"type": "string", "description": "Key to press"},
            "modifiers": {"type": "array", "items": {"type": "string"}, "description": "Modifier keys"}
          },
          "returns": {"type": "boolean", "description": "Success status"}
        }
      ]
    },
    "database_operations": {
      "description": "Database management and queries",
      "functions": [
        {
          "name": "execute_sql",
          "description": "Execute SQL query",
          "parameters": {
            "query": {"type": "string", "description": "SQL query"},
            "database_url": {"type": "string", "description": "Database connection string"},
            "parameters": {"type": "array", "items": {"type": "any"}}
          },
          "returns": {"type": "object", "properties": {"rows": "array", "affected_rows": "number"}}
        },
        {
          "name": "backup_database",
          "description": "Create database backup",
          "parameters": {
            "database_url": {"type": "string", "description": "Database connection string"},
            "backup_path": {"type": "string", "description": "Backup file path"}
          },
          "returns": {"type": "boolean", "description": "Success status"}
        },
        {
          "name": "restore_database",
          "description": "Restore database from backup",
          "parameters": {
            "database_url": {"type": "string", "description": "Database connection string"},
            "backup_path": {"type": "string", "description": "Backup file path"}
          },
          "returns": {"type": "boolean", "description": "Success status"}
        }
      ]
    },
    "memory_management": {
      "description": "Memory and context management",
      "functions": [
        {
          "name": "store_memory",
          "description": "Store information in memory",
          "parameters": {
            "key": {"type": "string", "description": "Memory key"},
            "value": {"type": "any", "description": "Value to store"},
            "category": {"type": "string", "default": "general"},
            "ttl": {"type": "number", "description": "Time to live in seconds"}
          },
          "returns": {"type": "boolean", "description": "Success status"}
        },
        {
          "name": "retrieve_memory",
          "description": "Retrieve information from memory",
          "parameters": {
            "key": {"type": "string", "description": "Memory key"},
            "category": {"type": "string", "default": "general"}
          },
          "returns": {"type": "any", "description": "Stored value"}
        },
        {
          "name": "search_memory",
          "description": "Search memory by content",
          "parameters": {
            "query": {"type": "string", "description": "Search query"},
            "category": {"type": "string", "description": "Memory category"},
            "limit": {"type": "number", "default": 10}
          },
          "returns": {"type": "array", "items": {"type": "object"}}
        },
        {
          "name": "clear_memory",
          "description": "Clear memory entries",
          "parameters": {
            "key": {"type": "string", "description": "Specific key to clear"},
            "category": {"type": "string", "description": "Category to clear"},
            "all": {"type": "boolean", "default": false}
          },
          "returns": {"type": "number", "description": "Number of entries cleared"}
        }
      ]
    },
    "ai_operations": {
      "description": "AI and ML operations",
      "functions": [
        {
          "name": "generate_embeddings",
          "description": "Generate text embeddings",
          "parameters": {
            "text": {"type": "string", "description": "Text to embed"},
            "model": {"type": "string", "default": "text-embedding-ada-002"}
          },
          "returns": {"type": "array", "items": {"type": "number"}}
        },
        {
          "name": "semantic_search",
          "description": "Perform semantic search",
          "parameters": {
            "query": {"type": "string", "description": "Search query"},
            "documents": {"type": "array", "items": {"type": "string"}},
            "top_k": {"type": "number", "default": 5}
          },
          "returns": {"type": "array", "items": {"type": "object"}}
        },
        {
          "name": "analyze_sentiment",
          "description": "Analyze text sentiment",
          "parameters": {
            "text": {"type": "string", "description": "Text to analyze"}
          },
          "returns": {"type": "object", "properties": {"sentiment": "string", "confidence": "number"}}
        },
        {
          "name": "extract_entities",
          "description": "Extract named entities from text",
          "parameters": {
            "text": {"type": "string", "description": "Text to analyze"},
            "entity_types": {"type": "array", "items": {"type": "string"}}
          },
          "returns": {"type": "array", "items": {"type": "object"}}
        }
      ]
    },
    "communication": {
      "description": "Communication and messaging",
      "functions": [
        {
          "name": "send_email",
          "description": "Send email message",
          "parameters": {
            "to": {"type": "array", "items": {"type": "string"}},
            "subject": {"type": "string", "description": "Email subject"},
            "body": {"type": "string", "description": "Email body"},
            "attachments": {"type": "array", "items": {"type": "string"}}
          },
          "returns": {"type": "boolean", "description": "Success status"}
        },
        {
          "name": "send_sms",
          "description": "Send SMS message",
          "parameters": {
            "to": {"type": "string", "description": "Phone number"},
            "message": {"type": "string", "description": "SMS content"}
          },
          "returns": {"type": "boolean", "description": "Success status"}
        },
        {
          "name": "make_http_request",
          "description": "Make HTTP request",
          "parameters": {
            "url": {"type": "string", "description": "Request URL"},
            "method": {"type": "string", "default": "GET", "enum": ["GET", "POST", "PUT", "DELETE", "PATCH"]},
            "headers": {"type": "object", "description": "Request headers"},
            "data": {"type": "any", "description": "Request body"},
            "timeout": {"type": "number", "default": 30}
          },
          "returns": {"type": "object", "properties": {"status_code": "number", "headers": "object", "body": "string"}}
        }
      ]
    }
  },
  "mcp_servers": {
    "known_servers": [
      {
        "name": "filesystem",
        "command": "npx",
        "args": ["-y", "@modelcontextprotocol/server-filesystem", "/path/to/allowed/files"],
        "description": "File system operations"
      },
      {
        "name": "brave-search",
        "command": "npx",
        "args": ["-y", "@modelcontextprotocol/server-brave-search"],
        "description": "Web search via Brave"
      },
      {
        "name": "postgres",
        "command": "npx",
        "args": ["-y", "@modelcontextprotocol/server-postgres", "postgresql://user:pass@localhost/db"],
        "description": "PostgreSQL database operations"
      },
      {
        "name": "sqlite",
        "command": "npx",
        "args": ["-y", "@modelcontextprotocol/server-sqlite", "/path/to/database.db"],
        "description": "SQLite database operations"
      },
      {
        "name": "github",
        "command": "npx",
        "args": ["-y", "@modelcontextprotocol/server-github"],
        "description": "GitHub repository operations"
      },
      {
        "name": "memory",
        "command": "npx",
        "args": ["-y", "@modelcontextprotocol/server-memory"],
        "description": "Memory and context management"
      },
      {
        "name": "fetch",
        "command": "npx",
        "args": ["-y", "@modelcontextprotocol/server-fetch"],
        "description": "HTTP fetch operations"
      },
      {
        "name": "puppeteer",
        "command": "npx",
        "args": ["-y", "@modelcontextprotocol/server-puppeteer"],
        "description": "Web automation with Puppeteer"
      }
    ],
    "auto_discovery": {
      "enabled": true,
      "search_paths": [
        "/usr/local/bin",
        "/opt/mcp/servers",
        "~/.local/bin/mcp-servers"
      ],
      "patterns": [
        "**/mcp-server-*",
        "**/server-*.js",
        "**/mcp_*.py"
      ]
    }
  },
  "security": {
    "sandboxing": {
      "enabled": true,
      "allowed_paths": [
        "/home/adam/artifactvirtual",
        "/tmp/mcp-workspace"
      ],
      "blocked_commands": [
        "rm -rf /",
        "format",
        "dd if=/dev/zero"
      ]
    },
    "api_limits": {
      "max_requests_per_minute": 1000,
      "max_execution_time": 300,
      "max_memory_usage": "1GB"
    }
  }
}
